import os
from core.classes import Cog_Extension
import discord
from discord import app_commands
from discord.ui import View, Button

class Func_Commands(Cog_Extension):
    @app_commands.command(name="help", description="–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –ê–π–∫–∏")
    async def help(self, interaction: discord.Interaction):
        await interaction.response.defer(ephemeral=False)
        user = interaction.user.name
        message = (f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É `/help` –≤ –∫–∞–Ω–∞–ª–µ `{interaction.channel.name if isinstance(interaction.channel, discord.TextChannel) else "Direct Message"}`.')
        channel_id = 000000000000000000
        channel = self.bot.get_channel(channel_id)
        await channel.send(message)
        user_id = str(interaction.user.id)
        if str(user_id) in open("blocked_users.txt").read():
            error_embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.", color=discord.Color.red())
            await interaction.response.send_message(embed=error_embed)
            return

        embed = discord.Embed(title=f"–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –ê–π–∫–∏:", color=0x921294)
        embed.add_field(name="–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:", value="<@{id}> </register:{id}> </imagine:{id}> </text-imagine:{id}> </set-channel:{id}>üÜï", inline=False)
        embed.add_field(name="–§—É–Ω–∫—Ü. –∫–æ–º–∞–Ω–¥—ã:", value="</help:{id}> </profile:{id}> </settings-set:{id}> </info:{id}> </bug-report:{id}>", inline=False)
        embed.add_field(name="Aika Plus:", value="</plus:{id}> </case:{id}> </buy:{id}> </pbonus:{id}> </reminder:{id}> </up-report:{id}> </transfer:{id}>", inline=False)
        embed.add_field(name="–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:", value="</translate:{id}> </search:{id}> </gen-bot:{id}>", inline=False)
        embed.add_field(name="–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è:", value="</meme:{id}> </shoot:{id}> </horoscope:{id}> </lucky:{id}>", inline=False)
        embed.add_field(name="–ë–∞–ª–±–µ—Å—ã—á:", value="</balb-chat:{id}> </balb-quote:{id}> </balb-text:{id}>", inline=False)
        await interaction.followup.send(embed=embed)
        return

    @app_commands.command(name="profile", description="–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    async def profile(self, interaction: discord.Interaction, user: discord.User = None):
        await interaction.response.defer()
        user_name = interaction.user.name
        message = (f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É `/profile` –≤ –∫–∞–Ω–∞–ª–µ `{interaction.channel.name if isinstance(interaction.channel, discord.TextChannel) else "Direct Message"}`.')
        channel_id = 000000000000000000
        channel = self.bot.get_channel(channel_id)
        await channel.send(message)
        if user:
            user_id = user.id
            user_mention = user.mention
        else:
            user_id = interaction.user.id
            user_mention = interaction.user.mention

        try:
            username = str(user or interaction.user)
            self.bot.current_channel = interaction.channel
            if str(user_id) in open("blocked_users.txt").read():
                error_embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.", color=discord.Color.red())
                await interaction.followup.send(embed=error_embed, ephemeral=True)
                return
            user_folder = os.path.join("aika_users", str(user_id))
            if not os.path.exists(user_folder):
                error_embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–•–º, –ø–æ—Ö–æ–∂–µ —è —Å –≤–∞–º–∏ –µ—â–µ –Ω–µ –∑–Ω–∞–∫–æ–º–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π `/register` —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç", color=discord.Color.red())
                await interaction.followup.send(embed=error_embed, ephemeral=True)
                return

            plan_path = os.path.join(user_folder, "plus", "plan.txt")
            with open(plan_path, "r") as f:
                plan = f.read().strip()

            period_path = os.path.join(user_folder, "plus", "period.txt")
            with open(period_path, "r") as f:
                period = f.read().strip()

            date_path = os.path.join(user_folder, "plus", "buy_date.txt")
            with open(date_path, "r") as f:
                buy_date = f.read().strip()

            with open(os.path.join(user_folder, "balance.txt"), "r") as f:
                balance = f.read()
            with open(os.path.join(user_folder, "balls_balance.txt"), "r") as f:
                balls_balance = f.read()
            with open(os.path.join(user_folder, "reg_date.txt"), "r") as f:
                reg_date = f.read()

            blocked_apb_users_file = "blocked_apb_users.txt"
            if str(user_id) in open(blocked_apb_users_file).read():
                balls_balance_display = "–î–æ—Å—Ç—É–ø –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"
            else:
                balls_balance_display = f"{balls_balance} –±–∞–ª–ª–æ–≤"

            period_mapping = {
                "1M": "1 –º–µ—Å—è—Ü",
                "3M": "3 –º–µ—Å—è—Ü–∞",
                "6M": "6 –º–µ—Å—è—Ü–µ–≤",
                "1Y": "1 –≥–æ–¥"
            }

            period_display = period_mapping.get(period, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")

            settings_button = Button(label="–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
            async def settings_callback(interaction):
                user_id = interaction.user.id
                try:
                    with open(f'aika_users/{user_id}/settings/notifications.txt', 'r') as file:
                        notif_type = file.read().strip()
                        if notif_type == "OS":
                            notif_text = "–¢–æ–ª—å–∫–æ —Å–∏—Å—Ç–µ–º–Ω—ã–µ"
                        elif notif_type == "All":
                            notif_text = "–í—Å–µ"
                        elif notif_type == "None":
                            notif_text = "–ù–∏–∫–∞–∫–∏–µ"
                        else:
                            notif_text = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
                except FileNotFoundError:
                    notif_text = "–§–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω"

                upers = None
                with open("upers.txt", "r") as upers_file:
                    upers = upers_file.read().splitlines()

                up_status = "<:on:{id}>" if str(user_id) in upers else "<:off:{id}>"

                embed = discord.Embed(title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <:beta:{id}>")
                embed.add_field(name=f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {notif_text}", value="–¢–æ, –∫–∞–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∞–º –º–æ–≥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å", inline=False)
                embed.add_field(name=f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∞–ø–∞—Ö: {up_status}", value="–ü–∞—Ä–∞–º–µ—Ç—Ä —Ç–æ–≥–æ, –ø–æ–ª—É—á–∞–µ—Ç–µ –ª–∏ –≤—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∞–ø–∞—Ö", inline=False)
                embed.set_footer( text="–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π /settings_set, –∞ –ø–æ–¥–∫–ª—é—á–∏—Ç—å/–æ—Ç–∫–ª—é—á–∏—Ç—å '–Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫—É –∞–ø–∞—Ç—å' –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π /reminder")
                await interaction.response.send_message(embed=embed, ephemeral=True)

            settings_button.callback = settings_callback
            view = View()
            button = Button(label="–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", url="https://pay.aika-ai.ru/")
            view.add_item(settings_button)
            view.add_item(button)
            embed = discord.Embed(title=f"–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {username}")
            embed.add_field(name="–ù–∏–∫–Ω–µ–π–º:", value=user_mention, inline=False)
            embed.add_field(name="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", value=f"{user_id}", inline=False)
            if plan == "Free":
                embed.add_field(name="–¢–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω:", value=f'{plan}\n> *–ö—É–ø–∏—Ç–µ Aika Plus, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ª—É—á—à–µ–≥–æ –ò–ò –±–æ—Ç–∞ –≤ –¥–∏—Å–∫–æ—Ä–¥–µ. –ü–æ–¥—Ä–æ–±–Ω–µ–µ: `/plus`*', inline=False)
            else:
                embed.add_field(name="–¢–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω:", value=f'{plan}', inline=True)
                if period_display:
                    embed.add_field(name="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:", value=period_display, inline=True)
                    embed.add_field(name="–î–∞—Ç–∞ –ø–æ–∫—É–ø–∫–∏:", value=buy_date, inline=True)
            if user is None or user_id == interaction.user.id:
                embed.add_field(name="–ë–∞–ª–∞–Ω—Å:", value=f"{balance} —Ä—É–±.", inline=True)
                embed.add_field(name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤:", value=balls_balance_display, inline=True)
            else:
                embed.add_field(name="–ë–∞–ª–∞–Ω—Å:", value="–°–∫—Ä—ã—Ç–æ", inline=True)
                embed.add_field(name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤:", value="–°–∫—Ä—ã—Ç–æ", inline=True)
            embed.add_field(name="–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:", value=reg_date, inline=False)

            embed.set_thumbnail(url=user.avatar.url if user else interaction.user.avatar.url)
            if user is None or user_id == interaction.user.id:
                await interaction.followup.send(embed=embed, view=view, ephemeral=True)
            else:
                await interaction.followup.send(embed=embed, ephemeral=True)
        except Exception as e:
            print(f"{e}")
            error_message = "–ü—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞"
            error_embed = discord.Embed(title="–û—à–∏–±–∫–∞", description=error_message, color=discord.Color.red())
            await interaction.followup.send(embed=error_embed, ephemeral=True)
            
    @app_commands.command(name="settings-set", description="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    @app_commands.choices(notifications=[
        app_commands.Choice(name="–í—Å–µ", value="All"),
        app_commands.Choice(name="–¢–æ–ª—å–∫–æ —Å–∏—Å—Ç–µ–º–Ω—ã–µ", value="OS"),
        app_commands.Choice(name="–ù–∏–∫–∞–∫–∏–µ", value="None")
    ])
    async def set_notifications(self, interaction, notifications: str):
        try:
            user_id = str(interaction.user.id)
            blocked_users_file_path = "blocked_users.txt"

            with open(blocked_users_file_path, "r") as blocked_users_file:
                blocked_users = blocked_users_file.readlines()
            blocked_users = [user.strip() for user in blocked_users]
            if user_id in blocked_users:
                error_embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.", color=discord.Color.red())
                await interaction.response.send_message(embed=error_embed, ephemeral=True)
                return

            user_folder = os.path.join("aika_users", str(user_id))
            if not os.path.exists(user_folder):
                error_embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–•–º, –ø–æ—Ö–æ–∂–µ —è —Å –≤–∞–º–∏ –µ—â–µ –Ω–µ –∑–Ω–∞–∫–æ–º–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π `/register` —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç", color=discord.Color.red())
                await interaction.response.send_message(embed=error_embed, ephemeral=True)
                return

            user_id = interaction.user.id
            user_folder = os.path.join("aika_users", str(user_id), "settings")
            if not os.path.exists(user_folder):
                os.makedirs(user_folder)

            notifications_file_path = os.path.join(user_folder, "notifications.txt")

            with open(notifications_file_path, "r") as file:
                current_notifications = file.read().strip()

            notification_names = {
                "All": "–í—Å–µ",
                "OS": "–¢–æ–ª—å–∫–æ —Å–∏—Å—Ç–µ–º–Ω—ã–µ",
                "None": "–ù–∏–∫–∞–∫–∏–µ"
            }

            user = interaction.user.name
            message = (f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –∏–∑–º–µ–Ω–∏–ª —Å—Ç–∞—Ç—É—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–∞ `{notification_names}` –≤ –∫–∞–Ω–∞–ª–µ `{interaction.channel.name if isinstance(interaction.channel, discord.TextChannel) else "Direct Message"}`.')
            channel_id = 000000000000000000
            channel = self.bot.get_channel(channel_id)
            await channel.send(message)

            if current_notifications == notifications:
                error_embed = discord.Embed(title="–û—à–∏–±–∫–∞", description=f"–î–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {notification_names.get(notifications)}", color=discord.Color.red())
                await interaction.response.send_message(embed=error_embed, ephemeral=True)
            else:
                with open(notifications_file_path, "w") as file:
                    file.write(notifications)
                success_embed = discord.Embed(title="–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã", description=f"–°—Ç–∞—Ç—É—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {notification_names.get(notifications)}", color=discord.Color.green())
                await interaction.response.send_message(embed=success_embed, ephemeral=True)

        except Exception as e:
            print(f"{e}")
            error_embed = discord.Embed(title="–û—à–∏–±–∫–∞", description=f"–ü—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", color=discord.Color.red())
            await interaction.response.send_message(embed=error_embed, ephemeral=True)

    @app_commands.command(name="reminder", description="–í–∫–ª/–≤—ã–∫–ª –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ–± –∞–ø–∞—Ö –ê–π–∫–∏")
    async def reminder_command(self, interaction):
        try:
            user_id = interaction.user.id
            blocked_users_file_path = "blocked_users.txt"
            reminder_file_path = "upers.txt"
            user_folder = os.path.join("aika_users", str(user_id))

            with open(blocked_users_file_path, "r") as blocked_users_file:
                blocked_users = blocked_users_file.readlines()
            blocked_users = [user.strip() for user in blocked_users]
            if str(user_id) in blocked_users:
                error_embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.", color=discord.Color.red())
                await interaction.response.send_message(embed=error_embed, ephemeral=True)
                return

            if not os.path.exists(user_folder):
                error_embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–•–º, –ø–æ—Ö–æ–∂–µ —è —Å –≤–∞–º–∏ –µ—â–µ –Ω–µ –∑–Ω–∞–∫–æ–º–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π `/register` —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç", color=discord.Color.red())
                await interaction.response.send_message(embed=error_embed, ephemeral=True)
                return

            reminder_enabled = False

            with open(reminder_file_path, "r+") as file:
                user_ids = file.readlines()
                file.seek(0)
                found = False
                for line in user_ids:
                    if str(user_id) not in line.strip():
                        file.write(line)
                    else:
                        found = True
                file.truncate()

                if not found:
                    file.write(str(user_id) + "\n")
                    reminder_enabled = True
                    response_message = "–ù–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞ –±—ã–ª–∞ –≤–∫–ª—é—á–µ–Ω–∞."
                    footer_text = "–û—Ç–∫–ª—é—á–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫—É –º–æ–∂–Ω–æ –≤–Ω–æ–≤—å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –≤–≤–æ–¥–æ–º –∫–æ–º–∞–Ω–¥—ã."
                    color = discord.Color.green()
                else:
                    reminder_enabled = False
                    response_message = "–ù–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞ –±—ã–ª–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞."
                    footer_text = "–í–∫–ª—é—á–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫—É –º–æ–∂–Ω–æ –≤–Ω–æ–≤—å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –≤–≤–æ–¥–æ–º –∫–æ–º–∞–Ω–¥—ã."
                    color = discord.Color.red()

            if reminder_enabled:
                embed = discord.Embed(title="–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã", description=response_message, color=color)
                embed.set_footer(text=footer_text)
                user = interaction.user.name
                message = (f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –≤–∫–ª—é—á–∏–ª –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫—É –æ–± –∞–ø–∞—Ö')
                channel_id = 000000000000000000
                channel = self.bot.get_channel(channel_id)
                await channel.send(message)
            else:
                embed = discord.Embed(title="–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã", description=response_message, color=color)
                embed.set_footer(text=footer_text)
                user = interaction.user.name
                message = (f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –≤—ã–∫–ª—é—á–∏–ª –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫—É –æ–± –∞–ø–∞—Ö')
                channel_id = 000000000000000000
                channel = self.bot.get_channel(channel_id)
                await channel.send(message)
            await interaction.response.send_message(embed=embed, ephemeral=True)

        except Exception as e:
            print(f"{e}")
            error_embed = discord.Embed(title="–û—à–∏–±–∫–∞", description=f"–ü—Ä–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", color=discord.Color.red())
            await interaction.response.send_message(embed=error_embed, ephemeral=True)

    @app_commands.command(name="info", description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ê–π–∫–µ")
    async def info(self, interaction: discord.Interaction):
        await interaction.response.defer(ephemeral=False)
        user = interaction.user.name
        message = (f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É `/info` –≤ –∫–∞–Ω–∞–ª–µ `{interaction.channel.name if isinstance(interaction.channel, discord.TextChannel) else "Direct Message"}`.')
        channel_id = 000000000000000000
        channel = self.bot.get_channel(channel_id)
        await channel.send(message)
        user_id = str(interaction.user.id)
        if str(user_id) in open("blocked_users.txt").read():
            error_embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.", color=discord.Color.red())
            await interaction.response.send_message(embed=error_embed)
            return
        server_count = len(self.bot.guilds)
        ping_ms = round(self.bot.latency * 1000)

        aika_users_dir = "aika_users"
        if os.path.exists(aika_users_dir) and os.path.isdir(aika_users_dir):
            user_count = len(os.listdir(aika_users_dir))
        else:
            user_count = 0

        embed = discord.Embed(title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Aika AI:", color=0x921294)
        embed.add_field(name="–í–µ—Ä—Å–∏—è:", value=f"4.8.45", inline=False)
        embed.add_field(name="–°—Ç–∞—Ç—É—Å:", value=f"üü¢ - –í –ø–æ–ª–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ", inline=False)
        embed.add_field(name="–ü–∏–Ω–≥:", value=f"{ping_ms} –º—Å", inline=False)
        embed.add_field(name="–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:", value=f"<t:1698077760:D>, <t:1698077760:R>", inline=False)
        embed.add_field(name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–µ—Ä–æ–≤:", value=f"{server_count}", inline=False)
        embed.add_field(name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", value=f"{user_count}", inline=False)
        embed.add_field(name="–ü—Ä–æ—á–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:", value=f"**[–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏](https://example.com) [–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è](https://example.com)\n[–°–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏](https://discord.gg/JACFfNHdYF)**", inline=False)
        await interaction.followup.send(embed=embed)
        return

    @app_commands.command(name="bug-report", description="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç –æ–± –æ—à–∏–±–∫–µ")
    async def bug_report(self, interaction: discord.Interaction, text: str, image_url: str = None):
        user_id = str(interaction.user.id)

        if str(user_id) in open("blocked_users.txt").read():
            error_embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.", color=discord.Color.red())
            await interaction.response.send_message(embed=error_embed, ephemeral=True)
            return

        user_folder = os.path.join("aika_users", str(user_id))
        if not os.path.exists(user_folder):
            error_embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–•–º, –ø–æ—Ö–æ–∂–µ —è —Å –≤–∞–º–∏ –µ—â–µ –Ω–µ –∑–Ω–∞–∫–æ–º–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π `/register` —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç", color=discord.Color.red())
            await interaction.response.send_message(embed=error_embed, ephemeral=True)
            return

        if image_url:
            if not image_url.startswith("https://"):
                error_embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.", color=discord.Color.red())
            await interaction.response.send_message(embed=error_embed, ephemeral=True)
            return

            if image_url.endswith((".png", ".jpeg", ".jpg")):
                bug_report_embed.set_image(url=image_url)
            else:
                error_embed = discord.Embed(title="–û—à–∏–±–∫–∞", description="–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è –Ω–∞ .png, .jpeg –∏–ª–∏ .jpg", color=discord.Color.red())
                await interaction.response.send_message(embed=error_embed, ephemeral=True)
                return

        bug_report_embed = discord.Embed(title="–û—Ç—á–µ—Ç –æ–± –æ—à–∏–±–∫–µ", color=discord.Color.orange())
        bug_report_embed.add_field(name="–¢–µ–∫—Å—Ç –æ—Ç—á–µ—Ç–∞", value=text)

        channel_id = 000000000000000000
        channel = self.bot.get_channel(channel_id)
        await channel.send(embed=bug_report_embed)
        success_embed = discord.Embed(title="–£—Å–ø–µ—Ö", description="–û—Ç—á–µ—Ç –æ–± –æ—à–∏–±–∫–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.", color=discord.Color.green())
        await interaction.response.send_message(embed=success_embed, ephemeral=True)

async def setup(bot):
    await bot.add_cog(Func_Commands(bot))